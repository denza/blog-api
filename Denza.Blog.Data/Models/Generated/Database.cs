



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `NovoVrijeme`
//     Provider:               `MySql.Data.MySqlClient`
//     Connection String:      `server=localhost;user=root;database=novovrij_beta;port=3306;password=**zapped**;`
//     Schema:                 `novovrij_beta`
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace NovoVrijeme
{

	public partial class NovoVrijemeDB : Database
	{
		public NovoVrijemeDB() 
			: base("NovoVrijeme")
		{
			CommonConstruct();
		}

		public NovoVrijemeDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			NovoVrijemeDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static NovoVrijemeDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new NovoVrijemeDB();
        }

		[ThreadStatic] static NovoVrijemeDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static NovoVrijemeDB repo { get { return NovoVrijemeDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    
	[TableName("wp_commentmeta")]


	[PrimaryKey("meta_id")]



	[ExplicitColumns]
    public partial class wp_commentmetum : NovoVrijemeDB.Record<wp_commentmetum>  
    {



		[Column] public ulong meta_id { get; set; }





		[Column] public ulong comment_id { get; set; }





		[Column] public string meta_key { get; set; }





		[Column] public string meta_value { get; set; }



	}

    
	[TableName("wp_comments")]


	[PrimaryKey("comment_ID")]



	[ExplicitColumns]
    public partial class wp_comment : NovoVrijemeDB.Record<wp_comment>  
    {



		[Column] public ulong comment_ID { get; set; }





		[Column] public ulong comment_post_ID { get; set; }





		[Column] public string comment_author { get; set; }





		[Column] public string comment_author_email { get; set; }





		[Column] public string comment_author_url { get; set; }





		[Column] public string comment_author_IP { get; set; }





		[Column] public DateTime comment_date { get; set; }





		[Column] public DateTime comment_date_gmt { get; set; }





		[Column] public string comment_content { get; set; }





		[Column] public int comment_karma { get; set; }





		[Column] public string comment_approved { get; set; }





		[Column] public string comment_agent { get; set; }





		[Column] public string comment_type { get; set; }





		[Column] public ulong comment_parent { get; set; }





		[Column] public ulong user_id { get; set; }



	}

    
	[TableName("wp_links")]


	[PrimaryKey("link_id")]



	[ExplicitColumns]
    public partial class wp_link : NovoVrijemeDB.Record<wp_link>  
    {



		[Column] public ulong link_id { get; set; }





		[Column] public string link_url { get; set; }





		[Column] public string link_name { get; set; }





		[Column] public string link_image { get; set; }





		[Column] public string link_target { get; set; }





		[Column] public string link_description { get; set; }





		[Column] public string link_visible { get; set; }





		[Column] public ulong link_owner { get; set; }





		[Column] public int link_rating { get; set; }





		[Column] public DateTime link_updated { get; set; }





		[Column] public string link_rel { get; set; }





		[Column] public string link_notes { get; set; }





		[Column] public string link_rss { get; set; }



	}

    
	[TableName("wp_options")]


	[PrimaryKey("option_id")]



	[ExplicitColumns]
    public partial class wp_option : NovoVrijemeDB.Record<wp_option>  
    {



		[Column] public ulong option_id { get; set; }





		[Column] public string option_name { get; set; }





		[Column] public string option_value { get; set; }





		[Column] public string autoload { get; set; }



	}

    
	[TableName("wp_pollsa")]


	[PrimaryKey("polla_aid")]



	[ExplicitColumns]
    public partial class wp_pollsa : NovoVrijemeDB.Record<wp_pollsa>  
    {



		[Column] public int polla_aid { get; set; }





		[Column] public int polla_qid { get; set; }





		[Column] public string polla_answers { get; set; }





		[Column] public int polla_votes { get; set; }



	}

    
	[TableName("wp_pollsip")]


	[PrimaryKey("pollip_id")]



	[ExplicitColumns]
    public partial class wp_pollsip : NovoVrijemeDB.Record<wp_pollsip>  
    {



		[Column] public int pollip_id { get; set; }





		[Column] public string pollip_qid { get; set; }





		[Column] public string pollip_aid { get; set; }





		[Column] public string pollip_ip { get; set; }





		[Column] public string pollip_host { get; set; }





		[Column] public string pollip_timestamp { get; set; }





		[Column] public string pollip_user { get; set; }





		[Column] public int pollip_userid { get; set; }



	}

    
	[TableName("wp_pollsq")]


	[PrimaryKey("pollq_id")]



	[ExplicitColumns]
    public partial class wp_pollsq : NovoVrijemeDB.Record<wp_pollsq>  
    {



		[Column] public int pollq_id { get; set; }





		[Column] public string pollq_question { get; set; }





		[Column] public string pollq_timestamp { get; set; }





		[Column] public int pollq_totalvotes { get; set; }





		[Column] public sbyte pollq_active { get; set; }





		[Column] public string pollq_expiry { get; set; }





		[Column] public sbyte pollq_multiple { get; set; }





		[Column] public int pollq_totalvoters { get; set; }



	}

    
	[TableName("wp_postmeta")]


	[PrimaryKey("meta_id")]



	[ExplicitColumns]
    public partial class wp_postmetum : NovoVrijemeDB.Record<wp_postmetum>  
    {



		[Column] public ulong meta_id { get; set; }





		[Column] public ulong post_id { get; set; }





		[Column] public string meta_key { get; set; }





		[Column] public string meta_value { get; set; }



	}

    
	[TableName("wp_posts")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class wpPost : NovoVrijemeDB.Record<wpPost>  
    {



		[Column] public ulong ID { get; set; }





		[Column] public ulong post_author { get; set; }





		[Column] public DateTime post_date { get; set; }





		[Column] public DateTime post_date_gmt { get; set; }





		[Column] public string post_content { get; set; }





		[Column] public string post_title { get; set; }





		[Column] public string post_excerpt { get; set; }





		[Column] public string post_status { get; set; }





		[Column] public string comment_status { get; set; }





		[Column] public string ping_status { get; set; }





		[Column] public string post_password { get; set; }





		[Column] public string post_name { get; set; }





		[Column] public string to_ping { get; set; }





		[Column] public string pinged { get; set; }





		[Column] public DateTime post_modified { get; set; }





		[Column] public DateTime post_modified_gmt { get; set; }





		[Column] public string post_content_filtered { get; set; }





		[Column] public ulong post_parent { get; set; }





		[Column] public string guid { get; set; }





		[Column] public int menu_order { get; set; }





		[Column] public string post_type { get; set; }





		[Column] public string post_mime_type { get; set; }





		[Column] public long comment_count { get; set; }



	}

    
	[TableName("wp_term_relationships")]


	[PrimaryKey("term_relationships_Id")]



	[ExplicitColumns]
    public partial class wp_term_relationship : NovoVrijemeDB.Record<wp_term_relationship>  
    {



		[Column] public ulong object_id { get; set; }





		[Column] public ulong term_taxonomy_id { get; set; }





		[Column] public int term_order { get; set; }





		[Column] public long term_relationships_Id { get; set; }



	}

    
	[TableName("wp_term_taxonomy")]


	[PrimaryKey("term_taxonomy_id")]



	[ExplicitColumns]
    public partial class wp_term_taxonomy : NovoVrijemeDB.Record<wp_term_taxonomy>  
    {



		[Column] public ulong term_taxonomy_id { get; set; }





		[Column] public ulong term_id { get; set; }





		[Column] public string taxonomy { get; set; }





		[Column] public string description { get; set; }





		[Column] public ulong parent { get; set; }





		[Column] public long count { get; set; }



	}

    
	[TableName("wp_terms")]


	[PrimaryKey("term_id")]



	[ExplicitColumns]
    public partial class wp_term : NovoVrijemeDB.Record<wp_term>  
    {



		[Column] public ulong term_id { get; set; }





		[Column] public string name { get; set; }





		[Column] public string slug { get; set; }





		[Column] public long term_group { get; set; }



	}

    
	[TableName("wp_usermeta")]


	[PrimaryKey("umeta_id")]



	[ExplicitColumns]
    public partial class wp_usermetum : NovoVrijemeDB.Record<wp_usermetum>  
    {



		[Column] public ulong umeta_id { get; set; }





		[Column] public ulong user_id { get; set; }





		[Column] public string meta_key { get; set; }





		[Column] public string meta_value { get; set; }



	}

    
	[TableName("wp_users")]


	[PrimaryKey("ID")]



	[ExplicitColumns]
    public partial class wp_user : NovoVrijemeDB.Record<wp_user>  
    {



		[Column] public ulong ID { get; set; }





		[Column] public string user_login { get; set; }





		[Column] public string user_pass { get; set; }





		[Column] public string user_nicename { get; set; }





		[Column] public string user_email { get; set; }





		[Column] public string user_url { get; set; }





		[Column] public DateTime user_registered { get; set; }





		[Column] public string user_activation_key { get; set; }





		[Column] public int user_status { get; set; }





		[Column] public string display_name { get; set; }



	}


}



